// split a string on a single char seperator
split = {in sep ->
  // convert to list of chars
  arr = (map (range (length in)) {index _ -> <- (get in index)})

  // add an empty list to the start for reduction

  // reduce list of chars to list of words
  <- (reduce arr {acc char _ ->
    last_index = (subtract (length acc) 1)

    <- (if (is char sep) {
      // add new item to result if we come across a seperator
      <- (insert acc "") 
    } {
      // else, add char to the last item
      <- (set acc (insert (get acc last_index) char) last_index)
    })
  } (list ""))
}

// init
(print "\e[H\e[2J\e[?25l")

// render loop
(until "" {state n ->

  // get current event
  curr = (event)

  // if it is a mouse event
  coords = (if (greater_than (length curr) 6) {
    <- (if (is (get curr 0 5) "\e[<35") {
      
      // take the rest of the curr, and split on ; to obtain the coordinates
      <- (map 
        (split (get curr 6 (subtract (length curr) 1)) ";") 
        {item i -> <- (integer item)
      })
    } {
      <- "no change"
    })
  } {
    <- "no change"
  })

  // if there was a change, rerender
  (if (not (is coords "no change")) {

    // clear
    (print "\e[2J")
    escape_code = (join "\e[" (string (get coords 1)) ";" (string (get coords 0)) "H")
    (print escape_code "🐟 NOM NOM NOM")
  })
})